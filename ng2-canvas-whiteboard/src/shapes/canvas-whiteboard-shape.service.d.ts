import { CanvasWhiteboardShape } from "./canvas-whiteboard-shape";
import { CanvasWhiteboardShapeOptions } from "./canvas-whiteboard-shape-options";
import { CanvasWhiteboardPoint } from "../canvas-whiteboard-point";
import { Observable } from "rxjs";
import * as ɵngcc0 from '@angular/core';
export interface INewCanvasWhiteboardShape<T extends CanvasWhiteboardShape> {
    new (positionPoint?: CanvasWhiteboardPoint, options?: CanvasWhiteboardShapeOptions, ...args: any[]): T;
}
export declare class CanvasWhiteboardShapeService {
    private _registeredShapesSubject;
    registeredShapes$: Observable<Array<INewCanvasWhiteboardShape<CanvasWhiteboardShape>>>;
    constructor();
    getShapeConstructorFromShapeName(shapeName: string): INewCanvasWhiteboardShape<CanvasWhiteboardShape>;
    getCurrentRegisteredShapes(): Array<INewCanvasWhiteboardShape<CanvasWhiteboardShape>>;
    isRegisteredShape(shape: INewCanvasWhiteboardShape<CanvasWhiteboardShape>): boolean;
    registerShape(shape: INewCanvasWhiteboardShape<CanvasWhiteboardShape>): void;
    registerShapes(shapes: Array<INewCanvasWhiteboardShape<CanvasWhiteboardShape>>): void;
    unregisterShape(shape: INewCanvasWhiteboardShape<CanvasWhiteboardShape>): void;
    unregisterShapes(shapes: Array<INewCanvasWhiteboardShape<CanvasWhiteboardShape>>): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CanvasWhiteboardShapeService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CanvasWhiteboardShapeService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FudmFzLXdoaXRlYm9hcmQtc2hhcGUuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJjYW52YXMtd2hpdGVib2FyZC1zaGFwZS5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFjQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhbnZhc1doaXRlYm9hcmRTaGFwZSB9IGZyb20gXCIuL2NhbnZhcy13aGl0ZWJvYXJkLXNoYXBlXCI7XG5pbXBvcnQgeyBDYW52YXNXaGl0ZWJvYXJkU2hhcGVPcHRpb25zIH0gZnJvbSBcIi4vY2FudmFzLXdoaXRlYm9hcmQtc2hhcGUtb3B0aW9uc1wiO1xuaW1wb3J0IHsgQ2FudmFzV2hpdGVib2FyZFBvaW50IH0gZnJvbSBcIi4uL2NhbnZhcy13aGl0ZWJvYXJkLXBvaW50XCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anNcIjtcbmV4cG9ydCBpbnRlcmZhY2UgSU5ld0NhbnZhc1doaXRlYm9hcmRTaGFwZTxUIGV4dGVuZHMgQ2FudmFzV2hpdGVib2FyZFNoYXBlPiB7XG4gICAgbmV3IChwb3NpdGlvblBvaW50PzogQ2FudmFzV2hpdGVib2FyZFBvaW50LCBvcHRpb25zPzogQ2FudmFzV2hpdGVib2FyZFNoYXBlT3B0aW9ucywgLi4uYXJnczogYW55W10pOiBUO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2FudmFzV2hpdGVib2FyZFNoYXBlU2VydmljZSB7XG4gICAgcHJpdmF0ZSBfcmVnaXN0ZXJlZFNoYXBlc1N1YmplY3Q7XG4gICAgcmVnaXN0ZXJlZFNoYXBlcyQ6IE9ic2VydmFibGU8QXJyYXk8SU5ld0NhbnZhc1doaXRlYm9hcmRTaGFwZTxDYW52YXNXaGl0ZWJvYXJkU2hhcGU+Pj47XG4gICAgY29uc3RydWN0b3IoKTtcbiAgICBnZXRTaGFwZUNvbnN0cnVjdG9yRnJvbVNoYXBlTmFtZShzaGFwZU5hbWU6IHN0cmluZyk6IElOZXdDYW52YXNXaGl0ZWJvYXJkU2hhcGU8Q2FudmFzV2hpdGVib2FyZFNoYXBlPjtcbiAgICBnZXRDdXJyZW50UmVnaXN0ZXJlZFNoYXBlcygpOiBBcnJheTxJTmV3Q2FudmFzV2hpdGVib2FyZFNoYXBlPENhbnZhc1doaXRlYm9hcmRTaGFwZT4+O1xuICAgIGlzUmVnaXN0ZXJlZFNoYXBlKHNoYXBlOiBJTmV3Q2FudmFzV2hpdGVib2FyZFNoYXBlPENhbnZhc1doaXRlYm9hcmRTaGFwZT4pOiBib29sZWFuO1xuICAgIHJlZ2lzdGVyU2hhcGUoc2hhcGU6IElOZXdDYW52YXNXaGl0ZWJvYXJkU2hhcGU8Q2FudmFzV2hpdGVib2FyZFNoYXBlPik6IHZvaWQ7XG4gICAgcmVnaXN0ZXJTaGFwZXMoc2hhcGVzOiBBcnJheTxJTmV3Q2FudmFzV2hpdGVib2FyZFNoYXBlPENhbnZhc1doaXRlYm9hcmRTaGFwZT4+KTogdm9pZDtcbiAgICB1bnJlZ2lzdGVyU2hhcGUoc2hhcGU6IElOZXdDYW52YXNXaGl0ZWJvYXJkU2hhcGU8Q2FudmFzV2hpdGVib2FyZFNoYXBlPik6IHZvaWQ7XG4gICAgdW5yZWdpc3RlclNoYXBlcyhzaGFwZXM6IEFycmF5PElOZXdDYW52YXNXaGl0ZWJvYXJkU2hhcGU8Q2FudmFzV2hpdGVib2FyZFNoYXBlPj4pOiB2b2lkO1xufVxuIl19